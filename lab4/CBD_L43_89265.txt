// nmec: 89265

#a/b
load csv with headers from "file:///git_selection.csv" as line
merge (user:User{svn_id:line.svn_id, name:line.real_name})
merge (project:Project {name:line.project_name, org:line.organization})
merge (user)-[:WORKS_ON {role:line.role_on_project}]->(project)

#c
#1
match (u:User)
return u;

#2
match (u:User)
return u.name;

#3
match (u:User)-[:WORKS_ON]->(p:Project)
return distinct p;

#4
match (u:User)-[:WORKS_ON]->(p:Project)
return distinct u, count(p);

#5
match (u:User)-[:WORKS_ON]->(p:Project)
return distinct u.svn_id, count(p)
order by count(p) desc;

#6
match (u:User)-[:WORKS_ON]->(p:Project)
return distinct p.name, count(u)
order by count(u) desc;

#7
match (u:User)-[w:WORKS_ON]->(p:Project)
where w.role="Committer"
return distinct p.name, count(u)
order by count(u) desc;

#8
match (u1:User{svn_id:"atm"})-[w1:WORKS_ON]->(p:Project)<-[w2:WORKS_ON]-(u2:User)
where u1 <> u2 
return distinct u1.name, u2.name, p.name;

#9
match (u1:User{svn_id:"atm"})-[w1:WORKS_ON]->(p:Project)<-[w2:WORKS_ON]-(u2:User)
where u1 <> u2 and w1.role="PMC" and w2.role="Committer"
return distinct u2;
